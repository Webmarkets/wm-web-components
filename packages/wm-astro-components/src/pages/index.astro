---
import BaseHead from "../../components/head/BaseHead.astro";
import BlogList from "../../components/blog/BlogList.astro";
import { Props as PostPreviewProps } from '../../components/blog/BlogPostPreview.astro';
import BlogCategories from "../../components/blog/BlogCategories.astro";
import Blogs from "../api/blogs.json"
import BaseBody, {CSSColors} from "../../components/BaseBody.astro";
import Footer from "../../components/footer/Footer.astro";

const getBlogPreview = post => {
    let preview: PostPreviewProps = {
        title: post.title,
        link: "https://example.com",
        mainImage: post.image
    }
    return preview;
}

const blogPreviewList = Blogs.map(post => getBlogPreview(post));

const theme:CSSColors = {
    primary: "rgb(28, 81, 102)",
    secondary: "rgb(31, 143, 177)",
    background: "#fff",
    backgroundAccent: "#eee",
    text: "#111"
}
---

<!DOCTYPE html>
<html>
    <head slot="head">
        <!-- Preconnect -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconect" href="https://fonts.gstatic.com" crossorigin>
        <!-- Render base tags -->
        <BaseHead title="WM Demo Page" description="A page for demonstrating Astro components"
            canonicalURL="https://www.example.com" image="https://picsum.photos/200/300" gtmContainerID="1234">
            <link slot="before" rel="stylesheet" href="https://fonts.gstatic.com/" crossorigin>
        </BaseHead>
        <!-- Site specific tags -->
        <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    </head>
    <BaseBody colors={theme} fonts={{main: 'Roboto'}} >
        <BlogList slot="main" posts={blogPreviewList} title="My blog posts">
            <BlogCategories slot="aside" categories={[{title: 'Category 1', href: '#'}, {title: 'Category 2', href: '#'}, {title: 'Category 3', href: '#'}]} />
        </BlogList>
        <Footer slot="footer" siteName="WM Demo" />
    </BaseBody>
</html>

<!-- <style is:global>
    :root {
        --theme-primary: rgb(28, 81, 102);
        --theme-secondary: rgb(31, 143, 177);
        --theme-bg: rgb(250, 250, 250);
        --theme-on-bg: rgb(30, 30, 30);
    }

    * {
        box-sizing: border-box;
    }

    /* Type */
    :root {
        --font-family-sans: 'Roboto', -apple-system, BlinkMacSystemFont, avenir next,
            avenir, helvetica neue, helvetica, Ubuntu, roboto, noto, segoe ui, arial,
            sans-serif;
        --font-size-sm: clamp(0.8rem, 0.25vw + 0.74rem, 0.94rem);
        --font-size-base: clamp(1rem, 0.45vw + 0.89rem, 1.25rem);
        --font-size-md: clamp(1.25rem, 0.76vw + 1.06rem, 1.67rem);
        --font-size-lg: clamp(1.56rem, 1.2vw + 1.26rem, 2.22rem);
        --font-size-xl: clamp(1.95rem, 1.83vw + 1.5rem, 2.96rem);
        --font-size-xxl: clamp(2.44rem, 2.74vw + 1.76rem, 3.95rem);
    }

    body {
        line-height: 1.5;
        font-family: var(--font-family-sans);
        font-size: var(--font-size-base);
    }

    h1,
    h2,
    h3 {
        font-family: var(--font-family-sans);
        font-weight: 600;
    }

    h1,
    h2,
    h3,
    h4,
    p,
    blockquote {
        margin-bottom: 1.5rem;
    }

    h1 {
        font-size: var(--font-size-xxl);
    }

    h2 {
        font-size: var(--font-size-xl);
    }

    h3 {
        font-size: var(--font-size-lg);
    }

    p {
        font-weight: 400;
    }
</style> -->